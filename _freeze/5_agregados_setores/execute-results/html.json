{
  "hash": "5cde7823d00ea61445f78b238ed97194",
  "result": {
    "engine": "knitr",
    "markdown": "---\nfrom: markdown+emoji\ncode-annotations: hover\n---\n\n\n\n\n# Agregados dos Setores Censitários\n\nTalvez os conjuntos de dados mais comumente usados dos censos brasileiros sejam os microdados de pessoas e domicílios. No entanto, o IBGE também disponibiliza dados muito ricos sobre as características populacionais e ambientais agregados no nível de setores censitários. Neste capítulo, mostramos como usar o pacote **{censobr}** para acessar facilmente esses dados usando a função `read_tracts()`.\n\n\n## Estrutura dos dados\n\nNo seu formato original, os dados agregados no nível de setores censitários estão divididos em diferentes tipos de variáveis (e.g. variáveis de características de pessoas, de domicílios, etc). Em muitos casos, esses conjuntos de variáveis estão espalhadas por vários arquivos (em alguns casos com centenas variáveis). Para facilitar o entendimento desses dados, o **{censobr}** reúne todos os arquivos / variáveis em 8 tabelas:\n\n- `\"Basico\"`\n- `\"Entorno\"`\n- `\"Domicilio\"`\n- `\"Pessoa\"`\n- `\"Responsavel\"`\n- `\"PessoaRenda\"`\n- `\"DomicilioRenda\"`\n- `\"ResponsavelRenda\"`\n\n\nTodas estas tabelas estão organizadas seguindo a mesma lógica. Nos casos em que as variáveis de uma tabela provêm de arquivos diferentes, o nome da variável recebe um prefixo indicando a sua tabela de origem. Isso é feito para facilitar a consulta do significado de cada coluna no arquivo de dicionário variáveis (no próximo capítulo a gente vai ver como baixar os dicionários variáveis dos censos).\n\nPara ilustrar isso, vejamos a tabela com variáveis de `\"Domicilio\"`. Essa tabela provêm de dois arquivos separados: *Domicilio01* e *Domicilio02*. Assim, os nomes das colunas nessa tabela são organizados da seguinte maneira:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(censobr)\n\n# baixa dados agregados de setores: variáveis de domicilios\ndom <- read_tracts(year = 2010, \n                   dataset = 'Domicilio',\n                   as_data_frame = FALSE,\n                   showProgress = FALSE)\n\nnames(dom)[c(1:12,301:306)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"code_tract\"        \"code_weighting\"    \"code_muni\"        \n [4] \"code_state\"        \"abbrev_state\"      \"name_state\"       \n [7] \"code_region\"       \"name_region\"       \"domicilio01_V1005\"\n[10] \"domicilio01_V001\"  \"domicilio01_V002\"  \"domicilio01_V003\" \n[13] \"domicilio02_V050\"  \"domicilio02_V051\"  \"domicilio02_V052\" \n[16] \"domicilio02_V053\"  \"domicilio02_V054\"  \"domicilio02_V055\" \n```\n\n\n:::\n:::\n\n\n\n\n## Dicionário de variáveis\n\nPara verificar o significado de cada variável, você pode executar o comando `data_dictionary()`, que abrirá no navegador um arquivo `.html` ou `.pdf` com o dicionário de variáveis de cada conjunto de dados (ver mais info no capítulo 6 sobre Documentação).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dictionary(year = 2010,\n                dataset = 'tracts')\n```\n:::\n\n\n\n\n\n## Exemplos reproduzíveis\n\nEssa organização dos dados agregados por setores censitários parece confusa a primeira vista. E é mesmo. Mas essa organização fica mais clara com alguns exemplos práticos.\n\nNesta seção, nós vamos utilizar alguns exemplos para ilustrar como trabalhar com dados no nível de setor censitário. Primeiro, precisamos carregar as bibliotecas que usaremos neste tutorial.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(censobr)\nlibrary(geobr)\nlibrary(arrow)\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n:::\n\n\n\n\nNos dois exemplos abaixo, usaremos a cidade de Belo Horizonte para fins de demonstração. No primeiro exemplo, nós vamos mapear a distribuição espacial da renda com dados de 2010. No segundo exemplo, nós vamos mapear a distribuição espacial da densidade populacional de BH com os dados preliminares do censo de 2022.\n\n\n### Exemplo 1: Distribuição espacial da renda em 2010\n\nNeste primeiro exemplo, criaremos um mapa da distribuição espacial da renda média per capita. A informação sobre o número total de residentes em cada setor censitário está disponível na tabela com conjunto de variáveis do bloco `\"Basico\"`, na variável `\"V002\"`. Já a informação sobre renda total do setor censiário pode ser encontradas na  tabela do bloco `\"DomicilioRenda\"`, na variável `\"V003\"`.\n\nUtilizando o código abaixo, podemos baixar os dados e calcular a renda per capita de todos os setores censitários no Brasil. Posteriormente nós vamos filtrar esses resultados para ficar apenas com os setores de BH.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# baixa os dados\ntract_basico <- read_tracts(year = 2010,                    # <1>\n                            dataset = \"Basico\",\n                            showProgress = FALSE)\n\ntract_income <- read_tracts(year = 2010,                    # <2>   \n                            dataset = \"DomicilioRenda\",\n                            showProgress = FALSE)     \n\n# selecionar conlunas\ntract_basico <- tract_basico |> select('code_tract','V002') # <3>\ntract_income <- tract_income |> select('code_tract','V003') # <3>\n\n# unir as tabelass\ntracts_df10 <- left_join(tract_basico, tract_income)        # <4>\n                \n\n# calcular a renda per capita\ntracts_df10 <- tracts_df10 |> \n                mutate(income_pc = V003 / V002) |>          # <5>\n                collect()                                   # <6>\n\nhead(tracts_df10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        code_tract  V002   V003 income_pc\n            <char> <num>  <num>     <num>\n1: 120001305000001   957 601805  628.8454\n2: 120001305000002  1203 385033  320.0607\n3: 120001305000003  1700 531794  312.8200\n4: 120001305000004   182  58853  323.3681\n5: 120001305000005   305 112979  370.4230\n6: 120001305000006   483 263538  545.6273\n```\n\n\n:::\n:::\n\n\n\n1. Download de dados do bloco Basico\n2. Download de dados do bloco DomicilioRenda\n3. Seleciona apenas as variáveis que vamos utilizar\n4. Junta as duas variáveis num único data.frame\n5. Cacula renda per capita de cada setor censitário\n6. Extração dos resultados\n\nO próximo passo é baixar as geometrias dos setores censitários de BH em 2010 com a função `read_census_tract`, do pacote **{geobr}**. Aqui, nós passamos o parâmetro `code_tract = \"MG\"` baixar os todos os setores do estado de Minas Gerais e depois filtramos apenas o município de Belo Horizonte.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# busca qual o código do municipio de Belo Horizonte\nbh_info <- geobr::lookup_muni(name_muni = 'Belo Horizonte')\n#> code_muni: 3106200\n\n# baixa municipio de BH\nmuni_bh <- geobr::read_municipality(code_muni = 'MG', \n                                    year = 2010,\n                                    showProgress = FALSE) |>\n           filter(name_muni == \"Belo Horizonte\")\n\n# baixa todos setores de Minas Gerais\ntracts_2010 <- geobr::read_census_tract(code_tract = \"MG\",\n                                        year = 2010,\n                                        simplified = FALSE,\n                                        showProgress = FALSE) # <1>\n\n# filtra setores de BH\ntracts_2010 <- filter(tracts_2010, name_muni == 'Belo Horizonte')\n\n# mapa de setores censitarios\nggplot() + \n  geom_sf(data=tracts_2010, fill = 'gray90', color='gray60') +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](5_agregados_setores_files/figure-html/get-geobr-data-1.png){width=672}\n:::\n:::\n\n\n\n1. O comportamento padrão do `{geobr}` é baixar uma versão da malha espacial com geometrias ligeiramente simplificadas (`simplified = TRUE`) para agilizar o processamento e visualização de dados. Aqui, nós baixamos os dados com geometrias originais devido à escala espacial da visualização dos resultados.\n\n\nPor fim, a gente pode fazer um *merge* dos dados espaciais e de renda dos setores censitários usando como variável chave o código do setor censitário (`code_tract`) e criar o mapa da distribuição espacial da renda per capita do município.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbh_tracts <- left_join(tracts_2010, tracts_df10, by = 'code_tract')\n\nggplot() +\n  geom_sf(data = bh_tracts, aes(fill = ifelse(income_pc<10000,income_pc,10000)), \n          color=NA) +\n  geom_sf(data = muni_bh, color='gray10', fill=NA) +\n  labs(title = 'Renda per capita dos setores censitários',\n       subtitle= 'Belo Horizonte, 2010') +\n  scale_fill_viridis_c(name = \"Reda per\\ncapita (R$)\",\n                       na.value=\"white\",\n                       option = 'cividis',\n                       breaks = c(0,  1e3, 4e3, 8e3, 1e4) ,\n                        labels  = c('0',  '1.000', '4.000', '8.000', '> 10.000')\n                       ) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](5_agregados_setores_files/figure-html/map-renda-setores-1.png){width=672}\n:::\n:::\n\n\n\n\n### Examplo 2: Distribuição espacial da população em 2022\n\nNeste segundo exemplo, nós vamos utilizar os resultados `\"Preliminares\"` dos agregados dos setores censitários do censo de 2022, que foram divulgados pelo IBGE em março de 2024. Em particular, vamos utilizar a variável `V0001` que informa a população total dos setores. Além disso, como houve uma mudança na malha espacial de setores censitários entre 2010 e 2022, nós precisamos baixar a malha do ano correspondente.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# download dados preliminares dos setores de 2022\ntracts_df22 <- read_tracts(year = 2022,\n                          dataset = \"Preliminares\",\n                          showProgress = FALSE) |>\n               filter(name_muni == 'Belo Horizonte') |>\n               collect()\n\n# baixa todos setores de Minas Gerais\ntracts_2022 <- geobr::read_census_tract(code_tract = \"MG\",\n                                        year = 2022,\n                                        simplified = FALSE,\n                                        showProgress = FALSE)\n\n# filtra setores de BH\ntracts_2022 <- filter(tracts_2022, name_muni == 'Belo Horizonte')\n```\n:::\n\n\n\n\nAgora a gente pode fazer um *merge* da tabela de população com os dados espaciais, calcular a área dos setores em Km<sup>2</sup> e a densidade demográfica de cada setor, e criar o mapa.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# merge tables\ntracts_df22$code_tract <- as.numeric(tracts_df22$code_tract)\nbh_tracts22 <- left_join(tracts_2022, tracts_df22, by = 'code_tract')\n\n# calcula a área dos setores\nbh_tracts22 <- bh_tracts22 |>\n              mutate(tract_aream2 = sf::st_area(tracts_2022),\n                     tract_areakm2 = units::set_units(tract_aream2, km2))\n\n# calcula densidade demografica\nbh_tracts22 <- bh_tracts22 |>\n               mutate(pop_km2 = as.numeric(V0001/ tract_areakm2))\n\n# map\nggplot() +\n  geom_sf(data = bh_tracts22, color=NA,\n          aes(fill = ifelse(pop_km2<20000,pop_km2,20000))) +\n  geom_sf(data = muni_bh, color='gray10', fill=NA) +\n  labs(title = 'Densidade populacional dos setores censitários',\n       subtitle= 'Belo Horizonte, 2022') +\n  scale_fill_distiller(palette = \"Reds\", direction = 1, \n                       name='População por'~Km^2,\n                       breaks = c(0,  5e3, 10e3, 15e3, 2e4) ,\n                       labels  = c('0',  '5.000', '10.000', '15.000', '> 20.000')) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](5_agregados_setores_files/figure-html/map-tracts-arborizacao-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "5_agregados_setores_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}